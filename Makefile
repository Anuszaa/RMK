# Makefile do czyszczenia projektu RMK (Linux/Mac)

.PHONY: clean clean-all clean-cache clean-build clean-logs help

# Domy≈õlny target
help:
	@echo "üßπ Dostƒôpne komendy czyszczenia:"
	@echo ""
	@echo "make clean       - Szybkie czyszczenie (cache + logi)"
	@echo "make clean-all   - Pe≈Çne czyszczenie (wszystko)"
	@echo "make clean-cache - Tylko cache Python"
	@echo "make clean-build - Tylko pliki build"
	@echo "make clean-logs  - Tylko pliki log√≥w"
	@echo ""

# Szybkie czyszczenie
clean: clean-cache clean-logs
	@echo "‚úÖ Szybkie czyszczenie zako≈Ñczone"

# Pe≈Çne czyszczenie
clean-all: clean-cache clean-build clean-logs clean-temp
	@echo "‚úÖ Pe≈Çne czyszczenie zako≈Ñczone"

# Cache Python
clean-cache:
	@echo "üóëÔ∏è Usuwanie cache Python..."
	@find . -name "__pycache__" -type d -exec rm -rf {} + 2>/dev/null || true
	@find . -name "*.pyc" -type f -delete 2>/dev/null || true
	@echo "‚úÖ Cache Python wyczyszczony"

# Pliki build
clean-build:
	@echo "üèóÔ∏è Usuwanie plik√≥w build..."
	@rm -rf build/ dist/ 2>/dev/null || true
	@echo "‚úÖ Pliki build usuniƒôte"

# Pliki log√≥w  
clean-logs:
	@echo "üìã Usuwanie log√≥w..."
	@rm -f *.log RMK_error_*.log pyinstaller.log 2>/dev/null || true
	@echo "‚úÖ Logi usuniƒôte"

# Pliki tymczasowe
clean-temp:
	@echo "üóëÔ∏è Usuwanie plik√≥w tymczasowych..."
	@rm -f *.tmp *.temp *~ .DS_Store Thumbs.db *.bak 2>/dev/null || true
	@echo "‚úÖ Pliki tymczasowe usuniƒôte"

# Sprawdzenie rozmiaru
size:
	@echo "üíæ Rozmiar projektu:"
	@du -sh . 2>/dev/null || echo "Nie mo≈ºna okre≈õliƒá rozmiaru"

# Git clean (ostrze≈ºenie)
git-clean:
	@echo "‚ö†Ô∏è  UWAGA: To usunie wszystkie nie≈õledzone pliki!"
	@git status --porcelain | grep '^??' || echo "Brak nie≈õledzonych plik√≥w"
	@read -p "Czy kontynuowaƒá git clean -fd? (t/N): " answer; \
	if [ "$$answer" = "t" ] || [ "$$answer" = "T" ]; then \
		git clean -fd; \
		echo "‚úÖ Git clean wykonany"; \
	else \
		echo "‚ùå Git clean anulowany"; \
	fi